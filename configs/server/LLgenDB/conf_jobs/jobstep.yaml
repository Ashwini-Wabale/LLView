# Copyright (c) 2023 Forschungszentrum Juelich GmbH.
# This file is part of LLview. 
#
# This is an open source software distributed under the GPLv3 license. More information see the LICENSE file at the top level.
#
# Contributions must follow the Contributor License Agreement. More information see the CONTRIBUTING.md file at the top level.
#
# Contributors:
#    Wolfgang Frings (Forschungszentrum Juelich GmbH) 

jobstep:
  tables:
    - table:
        name: jobstep
        options:
          update:
            LML: jobstep
          update_trigger:
            - stepmax
            - stepspec
            - jobspec
          archive:
            limit: max(ts_start)-72h
          index: jobid,step,ts
        columns: 
          - { name: jobid,           type: jobid_t,           LML_from: jobid,           LML_default: 'unknown' }
          - { name: step,            type: jobid_t,           LML_from: step,            LML_default: 'unknown' }
          - { name: ts,              type: ts_t,              LML_from: ts,              LML_default: -1, LML_minlastinsert: mintsinserted }
          - { name: ts_start,        type: ts_t,              LML_from: ts_start,        LML_default: -1 }
          - { name: ts_end,          type: ts_t,              LML_from: ts_end,          LML_default: -1 }
          - { name: account,         type: account_t,         LML_from: account,         LML_default: 0 }
          - { name: nnodes,          type: tasks_t,           LML_from: nnodes,          LML_default: 0 }
          - { name: ntasks,          type: tasks_t,           LML_from: ntasks,          LML_default: 0 }
          - { name: ncpus,           type: tasks_t,           LML_from: ncpus,           LML_default: 0 }
          - { name: owner,           type: owner_t,           LML_from: user,            LML_default: 'unknown' }
          - { name: queue,           type: queue_t,           LML_from: partition,       LML_default: "-" }
          - { name: state,           type: jstatus_t,         LML_from: state,           LML_default: 'unknown' }
          - { name: rc,              type: cnt_t,             LML_from: rc,              LML_default: -1 }
          - { name: signr,           type: cnt_t,             LML_from: signr,           LML_default: -1 }
          - { name: jobname,         type: longstr_t,         LML_from: jobname,         LML_default: "-" }
          - { name: nodelist,        type: longstr_t,         LML_from: nodelist,        LML_default: "-" }
#         - { name: name,            type: name_t,            LML_from: jobname,         LML_default: "-" }
# table may contain multiple entries per jobstep if they were updated in sacct

    - table:
        name: stepmax
        options:
          update:
            sql_update_contents:
              vars: mintsinserted
              sql: DELETE FROM stepmax WHERE jobid in (select distinct jobid from jobstep where ts >= mintsinserted);
                   INSERT INTO stepmax (jobid, step, ts, ts_start, ts_end)
                                             SELECT jobid,step,
                                               MAX(ts),
                                               MAX(ts_start),
                                               MAX(ts_end)
                                               FROM jobstep
                                               WHERE jobid in (select distinct jobid from jobstep where ts >= mintsinserted)
                                               GROUP BY jobid,step
                                                                                              
              sqldebug: 0
          archive:
            limit: max(ts_start)-72h
          index: jobid,step,ts
        columns: 
          - { name: jobid,            type: ts_t }
          - { name: step,             type: jobid_t }
          - { name: ts,               type: ts_t }
          - { name: ts_start,         type: ts_t }
          - { name: ts_end,           type: ts_t }

    - table:
        name: stepspec
        options:
          update:
            sql_update_contents:
              vars: mintsinserted
              sql: DELETE FROM stepspec WHERE jobid in (select distinct jobid from stepmax where ts >= mintsinserted);
                   INSERT INTO stepspec (jobid, step_lastts, min_rc, max_rc, nsteps, ts_start, ts_end, stepspec)
                                             SELECT jobid,
                                               MAX(ts),
                                               MIN(rc),
                                               MAX(rc),
                                               COUNT(ts_start)-1,
                                               MIN(ts_start),
                                               MAX(ts_end),
                                               "(" || GROUP_CONCAT(stepinfo,')(') || ")"
                                               FROM
                                               (
                                                  SELECT j.jobid,
                                                         j.ts,
                                                         j.rc,
                                                         j.ts_start,
                                                         j.ts_end,
                                                         j.step||"::"||
                                                         "name="||j.jobname||
                                                         "::rc="||j.rc||
                                                         "::sig="||j.signr||
                                                         "::beg="||j.ts_start||
                                                         "::end="||j.ts_end||
                                                         "::nnodes="||j.nnodes||
                                                         "::ntasks="||j.ntasks||
                                                         "::ncpus="||j.ncpus||
                                                         "::nodelist="||j.nodelist||
                                                         "::st="||j.state
                                                         as stepinfo
                                                  FROM jobstep j, stepmax m
                                                  WHERE j.jobid in (select distinct jobid from stepmax where ts >= mintsinserted)
                                                        AND j.jobid = m.jobid AND j.step = m.step AND j.ts = m.ts
                                                  ORDER by j.jobid,j.ts_start,j.ts_end
                                                ) GROUP BY jobid
                                               
              sqldebug: 0
          archive:
            limit: max(ts_start)-72h
          index: jobid
        columns: 
          - { name: jobid,            type: ts_t }
          - { name: step_lastts,      type: ts_t }
          - { name: min_rc,           type: cnt_t }
          - { name: max_rc,           type: cnt_t }
          - { name: nsteps,           type: cnt_t }
          - { name: ts_start,         type: ts_t }
          - { name: ts_end,           type: ts_t }
          - { name: stepspec,         type: extralongstr_t }

# only in sqlite > 3.8.3          
#                                                                   PRINTF("%s:name=%s,rc=%d,sig=%d,beg=%d,end=%d,st=%s",
#                                                                j.step,j.jobname,j.rc,j.signr,j.ts_start,j.ts_end,j.state)


          
    - table:
        name: jobspec
        options:
          update:
            sql_update_contents:
              vars: mintsinserted
              sql: DELETE FROM jobspec WHERE jobid in (select distinct jobid from stepmax where ts >= mintsinserted);
                   INSERT INTO jobspec (jobid, rc_lastts, rc_startts, rc_endts, rc_wallh, rc_rc, rc_signr, rc_state)
                                             SELECT
                                              j.jobid,
                                              j.ts,
                                              j.ts_start,
                                              j.ts_end,
                                              CASE
                                                WHEN(j.ts_end>0) THEN 1.0/3600.0*(j.ts_end-j.ts_start)
                                                ELSE 0.9
                                              END,                 
                                              j.rc,
                                              j.signr,
                                              j.state
                                              FROM jobstep j ,stepmax m
                                              WHERE j.jobid in (select distinct jobid from stepmax where ts >= mintsinserted)
                                                    AND j.step = 'job'
                                                    AND j.jobid = m.jobid AND j.step = m.step AND j.ts = m.ts
              sqldebug: 0                                               
          archive:
            limit: max(rc_lastts)-72h
        columns: 
          - { name: jobid,            type: ts_t }
          - { name: rc_lastts,        type: ts_t }
          - { name: rc_startts,       type: ts_t }
          - { name: rc_endts,         type: ts_t }
          - { name: rc_wallh,         type: hour_t }
          - { name: rc_rc,            type: cnt_t }
          - { name: rc_signr,         type: cnt_t }
          - { name: rc_state,         type: jstatus_t }
          
          
    # additional common tables jobmapts, jobmapnode 
    %include "../conf_common/jobmap_tables.yaml"

          
