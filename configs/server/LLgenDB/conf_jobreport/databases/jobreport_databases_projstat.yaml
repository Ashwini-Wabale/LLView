- table:
    name: projstat_accounted_jobs
    options:
      update:
        sql_update_contents:
          sqldebug: 0
          sql: DELETE FROM projstat_accounted_jobs WHERE (lastts<TS_NOW-60*60);
               INSERT INTO projstat_accounted_jobs (jobid, lastts)
                      SELECT jobid,lastts FROM projstat_to_account_jobs;
    columns: 
      - { name: jobid,           type: jobid_t }
      - { name: lastts,          type: ts_t }

- table:
    name: projstat_to_account_jobs
    options:
      update:
        sql_update_contents:
          sqldebug: 0
          sql: DELETE FROM projstat_to_account_jobs;
               INSERT INTO projstat_to_account_jobs (jobid, lastts)
                      SELECT jobid,lastts
                      FROM joblist
                      WHERE (lastts >= TS_NOW - 60*60 ) AND (lastts < TS_NOW - 30*60)
                            AND jobid NOT IN (SELECT jobid FROM projstat_accounted_jobs );
    columns: 
      - { name: jobid,           type: jobid_t }
      - { name: lastts,          type: ts_t }

- table:
    name: projstat_per_project
    options:
      update:
        sql_update_contents:
          sqldebug: 1
          vars: intervalmin=30, intervalmax=60
          aggr_by_time_resolutions: [1, 60, 1440]     # in minutes (1 min, 1 hour, 1 day)
          aggr_by_time_mintslimit: 60                 # in minutes since TS_NOW
          sql: DELETE FROM projstat_per_project WHERE (_time_res=1) AND (ts >= TS_NOW - intervalmax*60 );
               INSERT INTO projstat_per_project (
                       _time_res, _time_cnt, 
                       account, ts, numjobs_sum,
                       numnodes_min,numnodes_avg,numnodes_max,
                       wall_min, wall_avg, wall_max,
                       runtime_min, runtime_avg, runtime_max,
                       wallusage_min, wallusage_avg, wallusage_max,
                       load_min, load_avg, load_max,
                       usage_min, usage_avg, usage_max,
                       used_cores_min, used_cores_avg, used_cores_max,
                       gpu_usage_min, gpu_usage_avg, gpu_usage_max
                       )
                      SELECT 1,1, account, lastts,
                             count(jobid),
                             MIN(numnodes),AVG(numnodes),MAX(numnodes),
                             MIN(wall),AVG(wall),MAX(wall),
                             MIN(runtime),AVG(runtime),MAX(runtime),
                             CASE WHEN ( wall > 0 ) THEN MIN(100.0*runtime/wall)
                                  ELSE 0
                             END wallusage_min,
                             CASE WHEN ( wall > 0 ) THEN AVG(100.0*runtime/wall)
                                  ELSE 0
                             END wallusage_avg,
                             CASE WHEN ( wall > 0 ) THEN MAX(100.0*runtime/wall)
                                  ELSE 0
                             END wallusage_max,
                             MIN(load_min),AVG(load_avg),MAX(load_min),
                             MIN(usage_min),AVG(usage_avg),MAX(usage_max),
                             MIN(used_cores_min),AVG(used_cores_avg),MAX(used_cores_max),
                             MIN(gpu_usage_min),AVG(gpu_usage_avg),MAX(gpu_usage_max)
                      FROM joblist
                      WHERE (lastts >= TS_NOW - intervalmax*60 ) AND (lastts < TS_NOW - intervalmin*60)
                      GROUP BY account,lastts;
      archive:
        limit_aggr_time: [ 6120, 133920, 2628000 ]     # in minutes (3 days, 93 days, 5 years)
        limit_aggr_time_var: ts
    columns: 
      - { name: _time_res,       type: _time_res_t }
      - { name: _time_cnt,       type: _time_cnt_t }
      - { name: account,         type: account_t, time_aggr: KEY }
      - { name: ts,              type: ts_t,      time_aggr: TS  }
      - { name: numjobs_sum,     type: int_t,     time_aggr: SUM }
      - { name: numnodes_min,    type: int_t,     time_aggr: MIN }
      - { name: numnodes_avg,    type: float_t,   time_aggr: AVG }
      - { name: numnodes_max,    type: int_t,     time_aggr: MAX }
      - { name: wall_min,        type: int_t,     time_aggr: MIN }
      - { name: wall_avg,        type: float_t,   time_aggr: AVG }
      - { name: wall_max,        type: int_t,     time_aggr: MAX }
      - { name: runtime_min,     type: int_t,     time_aggr: MIN }
      - { name: runtime_avg,     type: float_t,   time_aggr: AVG }
      - { name: runtime_max,     type: int_t,     time_aggr: MAX }
      - { name: wallusage_min,   type: float_t,   time_aggr: MIN }
      - { name: wallusage_avg,   type: float_t,   time_aggr: AVG }
      - { name: wallusage_max,   type: float_t,   time_aggr: MAX }
      - { name: load_min,        type: float_t,   time_aggr: MIN }
      - { name: load_avg,        type: float_t,   time_aggr: AVG }
      - { name: load_max,        type: float_t,   time_aggr: MAX }
      - { name: usage_min,       type: float_t,   time_aggr: MIN }
      - { name: usage_avg,       type: float_t,   time_aggr: AVG }
      - { name: usage_max,       type: float_t,   time_aggr: MAX }
      - { name: used_cores_min,  type: float_t,   time_aggr: MIN }
      - { name: used_cores_avg,  type: float_t,   time_aggr: AVG }
      - { name: used_cores_max,  type: float_t,   time_aggr: MAX }
      - { name: gpu_usage_min,   type: float_t,   time_aggr: MIN }
      - { name: gpu_usage_avg,   type: float_t,   time_aggr: AVG }
      - { name: gpu_usage_max,   type: float_t,   time_aggr: MAX }

- table:
    name: projstat_per_project_aggr
    options:
      update:
        sql_update_contents:
          sqldebug: 1
          sql: DELETE FROM projstat_per_project_aggr;
               INSERT INTO projstat_per_project_aggr (
                       account, ts, numjobs_sum,
                       numnodes_min,numnodes_avg,numnodes_max,
                       wall_min, wall_avg, wall_max,
                       runtime_min, runtime_avg, runtime_max,
                       wallusage_min, wallusage_avg, wallusage_max,
                       load_min, load_avg, load_max,
                       usage_min, usage_avg, usage_max,
                       used_cores_min, used_cores_avg, used_cores_max,
                       gpu_usage_min, gpu_usage_avg, gpu_usage_max
                       )
                      SELECT account, max(ts),
                             SUM(numjobs_sum),
                             MIN(numnodes_min),AVG(numnodes_min),MAX(numnodes_min),
                             MIN(wall_min),AVG(wall_min),MAX(wall_min),
                             MIN(runtime_min),AVG(runtime_min),MAX(runtime_min),
                             MIN(wallusage_min),AVG(wallusage_avg),MAX(wallusage_max),
                             MIN(load_min),AVG(load_avg),MAX(load_min),
                             MIN(usage_min),AVG(usage_avg),MAX(usage_max),
                             MIN(used_cores_min),AVG(used_cores_avg),MAX(used_cores_max),
                             MIN(gpu_usage_min),AVG(gpu_usage_avg),MAX(gpu_usage_max)
                      FROM projstat_per_project
                      GROUP BY account;
    columns: 
      - { name: account,         type: account_t }
      - { name: ts,              type: ts_t    }
      - { name: numjobs_sum,     type: int_t   }
      - { name: numnodes_min,    type: int_t   }
      - { name: numnodes_avg,    type: float_t }
      - { name: numnodes_max,    type: int_t   }
      - { name: wall_min,        type: int_t   }
      - { name: wall_avg,        type: float_t }
      - { name: wall_max,        type: int_t   }
      - { name: runtime_min,     type: int_t   }
      - { name: runtime_avg,     type: float_t }
      - { name: runtime_max,     type: int_t   }
      - { name: wallusage_min,   type: float_t }
      - { name: wallusage_avg,   type: float_t }
      - { name: wallusage_max,   type: float_t }
      - { name: load_min,        type: float_t }
      - { name: load_avg,        type: float_t }
      - { name: load_max,        type: float_t }
      - { name: usage_min,       type: float_t }
      - { name: usage_avg,       type: float_t }
      - { name: usage_max,       type: float_t }
      - { name: used_cores_min,  type: float_t }
      - { name: used_cores_avg,  type: float_t }
      - { name: used_cores_max,  type: float_t }
      - { name: gpu_usage_min,   type: float_t }
      - { name: gpu_usage_avg,   type: float_t }
      - { name: gpu_usage_max,   type: float_t }
      
