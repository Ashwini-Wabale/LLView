# Copyright (c) 2023 Forschungszentrum Juelich GmbH.
# This file is part of LLview. 
#
# This is an open source software distributed under the GPLv3 license. More information see the LICENSE file at the top level.
#
# Contributions must follow the Contributor License Agreement. More information see the CONTRIBUTING.md file at the top level.
#
# Contributors:
#    Wolfgang Frings (Forschungszentrum Juelich GmbH) 

- table:
    name: stat_by_queue_ts
    options:
      update:
        sql_update_contents:
          vars: mintsinserted
          sql: DELETE FROM stat_by_queue_ts WHERE (ts >= mintsinserted);
               INSERT INTO stat_by_queue_ts (queue, ts, numjobs,sum_nodes,avg_waittime)
                                                SELECT queue, ts, COUNT(jobid), SUM(numnodes), AVG(waittime)/3600.0 
                                                FROM queuedjobs
                                                WHERE reason_nr in (0,1,5) AND STARTTIME = 'Unknown'
                                                      AND (ts >= mintsinserted)
                                                GROUP BY queue,ts;
               INSERT INTO stat_by_queue_ts (queue, ts, numjobs,sum_nodes,avg_waittime)
                                                SELECT queue, mintsinserted, 0, 0, 0.0 
                                                FROM stat_by_queue_ts
                                                GROUP BY queue
                                                HAVING queue NOT IN ( SELECT queue FROM stat_by_queue_ts WHERE (ts = mintsinserted) )
          sqldebug: 0
      archive:
        limit: max(ts)-72h
    columns: 
      - { name: queue,           type: queue_t,          }
      - { name: ts,              type: ts_t              }
      - { name: numjobs,         type: count_t           }
      - { name: sum_nodes,       type: count_t           }
      - { name: avg_waittime,    type: hour_t            }

- table:
    name: stat_time_aggr_queue_ts
    options:
      update:
        sql_update_contents:
          vars: mintsinserted
          aggr_by_time_resolutions: [1, 60, 1440]     # in minutes (1 min, 1 hour, 1 day)
          aggr_by_time_mintsvar: mintsinserted
          sql: DELETE FROM stat_time_aggr_queue_ts WHERE (ts >= mintsinserted);
               INSERT INTO stat_time_aggr_queue_ts (_time_res, _time_cnt, ts, queue, numjobs,sum_nodes,avg_waittime)
                                                SELECT 1,1, ts, queue, numjobs, sum_nodes, avg_waittime
                                                FROM stat_by_queue_ts
                                                WHERE (ts >= mintsinserted);
          sqldebug: 0
      archive:
        limit_aggr_time: [ 6120, 133920, 2628000 ]     # in minutes (3 days, 93 days, 5 years)
        limit_aggr_time_var: ts
    columns: 
      - { name: _time_res,       type: _time_res_t }
      - { name: _time_cnt,       type: _time_cnt_t }
      - { name: ts,              type: ts_t,      time_aggr: TS }
      - { name: queue,           type: queue_t,   time_aggr: KEY }
      - { name: numjobs,         type: count_t,   time_aggr: AVG }
      - { name: sum_nodes,       type: count_t,   time_aggr: AVG }
      - { name: avg_waittime,    type: hour_t,    time_aggr: AVG }
     

# Update tables: (fill new time_aggr table with data from old span tables)
# _time_res=1
# insert into stat_time_aggr_queue_ts (_time_res,_time_cnt,ts, queue, numjobs,sum_nodes,avg_waittime) select 1,1,ts,queue,numjobs,sum_nodes,avg_waittime from stat_by_queue_ts where ts<(select min(ts) from stat_time_aggr_queue_ts where (_time_res=1));
# _time_res=60
# insert into stat_time_aggr_queue_ts (_time_res,_time_cnt,ts, queue, numjobs,sum_nodes,avg_waittime) select 60,60,ts, queue, numjobs,sum_nodes,avg_waittime from stat_by_queue_ts_hourly where ts<=(select min(ts) from stat_time_aggr_queue_ts where (_time_res=60));
# _time_res=1440
# insert into stat_time_aggr_queue_ts (_time_res,_time_cnt,ts, queue, numjobs,sum_nodes,avg_waittime) select 1440,1440,ts, queue, numjobs,sum_nodes,avg_waittime from stat_by_queue_ts_daily where ts<=(select min(ts) from stat_time_aggr_queue_ts where (_time_res=1440));
# Status:
# select _time_res,count(*),sum(_time_cnt),min(ts),max(ts),(max(ts)-min(ts))/60.0/60.0/24.0 from stat_time_aggr_queue_ts where queue="booster" group by _time_res;
